#!/bin/bash

#
# Copyright (c) 2022-2024, NVIDIA CORPORATION. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Build the spark-rapids-jni artifact in a Docker container with devtoolset

set -e

# Base paths relative to this script's location
SCRIPTDIR=$(cd $(dirname $0); pwd)

LOCAL_MAVEN_REPO=${LOCAL_MAVEN_REPO:-"$HOME/.m2/repository"}
USE_GDS=${USE_GDS:-ON}
export CMAKE_GENERATOR=${CMAKE_GENERATOR:-"Ninja"}
export DOCKER_BUILD_EXTRA_ARGS="--platform=linux/amd64 --build-arg CMAKE_ARCH=x86_64"
CUDA_VER=${CUDA_VER:-cuda11}
USE_SANITIZER=${USE_SANITIZER:-ON}
BUILD_FAULTINJ=${BUILD_FAULTINJ:-ON}

if (( $# == 0 )); then
  echo "Usage: $0 <Maven build arguments>"
  exit 1
fi

case $(uname -m) in
  x86_64|amd64)
    arch=amd64;;
  aarch64|arm64)
    arch=arm64;;
  *)
    echo "Unsupported CPU architecture"; exit 1;;
esac

# Set env for arm64 build
if [ "$arch" == "arm64" ]; then
  profiles="${profiles},arm64"
  USE_GDS="OFF"
  USE_SANITIZER="ON"
  BUILD_FAULTINJ="OFF"
  export DOCKER_BUILD_EXTRA_ARGS="--platform=linux/arm64 --build-arg CMAKE_ARCH=aarch64"
fi

$SCRIPTDIR/run-in-docker mvn \
    -Dmaven.repo.local=$LOCAL_MAVEN_REPO \
    -DUSE_GDS=$USE_GDS \
    -DBUILD_TESTS=ON -DBUILD_FAULTINJ=${BUILD_FAULTINJ} -Dcuda.version=$CUDA_VER \
    -DUSE_SANITIZER=${USE_SANITIZER} \
    "$@"
