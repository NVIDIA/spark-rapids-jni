ARG CUDA_VERSION=11.5.0
FROM nvidia/cuda:$CUDA_VERSION-devel-rockylinux8

# try this arg with 9 and 10, but both failed.
ARG DEVTOOLSET_VERSION=9

RUN dnf install -y gcc-toolset-${DEVTOOLSET_VERSION}-toolchain python38 epel-release git tzdata-java zlib-devel maven wget patch
RUN dnf --enablerepo=powertools install -y ninja-build
# need?
RUN ln -s /usr/bin/python3 /usr/bin/python && \
    ln -s /usr/bin/pip3 /usr/bin/pip

RUN mkdir /usr/local/rapids && mkdir /rapids && chmod 777 /usr/local/rapids && chmod 777 /rapids

# bunddle with maven
ENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk

# 3.22.3: CUDA architecture 'native' support + flexible CMAKE_<LANG>_*_LAUNCHER for ccache
ARG CMAKE_VERSION=3.23.3

RUN cd /usr/local && wget --quiet https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-linux-aarch64.tar.gz && \
   tar zxf cmake-${CMAKE_VERSION}-linux-aarch64.tar.gz && \
   rm cmake-${CMAKE_VERSION}-linux-aarch64.tar.gz
ENV PATH /usr/local/cmake-${CMAKE_VERSION}-linux-aarch64/bin:$PATH

# no aarch64 prebuilt binaries and ccmake seems not related to CI docker build. So comment out.
# ccache for interactive builds
# ARG CCACHE_VERSION=4.6

# RUN cd /tmp && wget --quiet https://github.com/ccache/ccache/releases/download/v${CCACHE_VERSION}/ccache-${CCACHE_VERSION}.tar.gz && \
#     tar zxf ccache-${CCACHE_VERSION}.tar.gz && \
#     rm ccache-${CCACHE_VERSION}.tar.gz && \
#     cd ccache-${CCACHE_VERSION} && \
#     mkdir build && \
#     cd build && \
#     cmake .. \
#         -DCMAKE_BUILD_TYPE=Release \
#         -DZSTD_FROM_INTERNET=ON \
#         -DREDIS_STORAGE_BACKEND=OFF && \
#     cmake --build . --parallel ${PARALLEL_LEVEL} --target install && \
#     rm -rf ccache-${CCACHE_VERSION}

## install a version of boost that is needed for arrow/parquet to work
RUN cd /usr/local && wget --quiet https://boostorg.jfrog.io/artifactory/main/release/1.79.0/source/boost_1_79_0.tar.gz && \
  tar -xzf boost_1_79_0.tar.gz && \
  rm boost_1_79_0.tar.gz && \
  cd boost_1_79_0 && \
  ./bootstrap.sh --prefix=/usr/local && \
  ./b2 install --prefix=/usr/local --with-filesystem --with-system && \
   cd /usr/local && \
   rm -rf boost_1_79_0
