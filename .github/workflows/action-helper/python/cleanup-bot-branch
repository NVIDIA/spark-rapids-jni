#!/usr/bin/env python

# Copyright (c) 2022, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
from argparse import ArgumentParser

from utils import EnvDefault, PullRequest


def main():
    parser = ArgumentParser(description="Cleanup bot branch")
    parser.add_argument("--owner", action=EnvDefault, env="OWNER",
                        help="github token, will try use env OWNER if empty")
    parser.add_argument("--repo", action=EnvDefault, env="REPO",
                        help="repo name, will try use env REPO if empty")
    parser.add_argument("--head", action=EnvDefault, env="HEAD",
                        help="HEAD ref, will try use env HEAD if empty")
    parser.add_argument("--base", action=EnvDefault, env="BASE",
                        help="Base ref, will try use env BASE if empty")
    parser.add_argument("--token", action=EnvDefault, env="TOKEN",
                        help="github token, will try use env TOKEN if empty")
    args = parser.parse_args()

    try:
        if not args.head.startswith('bot-'):
            raise Exception(f"Cannot delete {args.head}, the script is only allowed to delete branch w/ bot-* prefix")

        pr = PullRequest(head_owner=args.owner, head=args.head, head_token=args.token,
                         base_owner=args.owner, repo=args.repo, base=args.base, base_token=args.token)
        if exist := pr.get_open():
            number = exist[0].get('number')
            raise Exception(f"Cannot delete {pr.head}, pull request #{number} is still open")
        else:
            pr.delete_head()
    except Exception as e:
        print(e)
        sys.exit(1)


if __name__ == '__main__':
    main()
